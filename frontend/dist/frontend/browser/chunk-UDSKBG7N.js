import{Z as i,db as c}from"./chunk-PPMLOB7I.js";var a=class extends Error{};a.prototype.name="InvalidTokenError";function l(r){return decodeURIComponent(atob(r).replace(/(.)/g,(e,o)=>{let t=o.charCodeAt(0).toString(16).toUpperCase();return t.length<2&&(t="0"+t),"%"+t}))}function f(r){let e=r.replace(/-/g,"+").replace(/_/g,"/");switch(e.length%4){case 0:break;case 2:e+="==";break;case 3:e+="=";break;default:throw new Error("base64 string is not of the correct length")}try{return l(e)}catch{return atob(e)}}function d(r,e){if(typeof r!="string")throw new a("Invalid token specified: must be a string");e||(e={});let o=e.header===!0?0:1,t=r.split(".")[o];if(typeof t!="string")throw new a(`Invalid token specified: missing part #${o+1}`);let n;try{n=f(t)}catch(s){throw new a(`Invalid token specified: invalid base64 for part #${o+1} (${s.message})`)}try{return JSON.parse(n)}catch(s){throw new a(`Invalid token specified: invalid json for part #${o+1} (${s.message})`)}}var w=(()=>{let e=class e{constructor(){this._token=c(void 0);let t=localStorage.getItem("token");t&&this._token.set(t)}set token(t){this._token.set(t),localStorage.setItem("token",t||"")}get token(){return this._token}hasValidToken(){let t=this._token();if(!t)return!1;let n=d(t),s=Date.now()/1e3;return n.exp?n.exp>s:!1}};e.\u0275fac=function(n){return new(n||e)},e.\u0275prov=i({token:e,factory:e.\u0275fac,providedIn:"root"});let r=e;return r})();export{w as a};
